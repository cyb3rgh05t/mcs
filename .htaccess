# Mobile Car Service - Apache Configuration
# .htaccess für URL-Rewriting und Sicherheit

# ====================================
# URL-Rewriting für API
# ====================================
RewriteEngine On

# API-Requests an backend/api.php weiterleiten
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^api/(.*)$ backend/api.php/$1 [QSA,L]

# Backend-Dateien direkt erreichbar machen (für Setup)
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^backend/(.*)$ backend/$1 [QSA,L]

# ====================================
# Sicherheits-Headers
# ====================================

# XSS-Schutz
Header always set X-XSS-Protection "1; mode=block"

# Content-Type-Sniffing verhindern
Header always set X-Content-Type-Options "nosniff"

# Clickjacking verhindern
Header always set X-Frame-Options "SAMEORIGIN"

# HTTPS erzwingen (in Produktion aktivieren)
# Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"

# Referrer-Policy
Header always set Referrer-Policy "strict-origin-when-cross-origin"

# Content Security Policy (anpassen nach Bedarf)
Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' cdnjs.cloudflare.com; font-src 'self' cdnjs.cloudflare.com; img-src 'self' data:; connect-src 'self'"

# ====================================
# CORS-Headers für API
# ====================================

# CORS für API-Requests aktivieren
<IfModule mod_headers.c>
    # Für Preflight-Requests
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    Header always set Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With"
    Header always set Access-Control-Max-Age "86400"
    
    # OPTIONS-Requests für Preflight
    RewriteCond %{REQUEST_METHOD} OPTIONS
    RewriteRule ^(.*)$ $1 [R=200,L]
</IfModule>

# ====================================
# Dateischutz
# ====================================

# Zugriff auf sensible Dateien verbieten
<FilesMatch "\.(sqlite|db|log|ini|env)$">
    Order Allow,Deny
    Deny from all
</FilesMatch>

# Backup-Dateien schützen
<FilesMatch "\.(bak|backup|old|orig|save|tmp)$">
    Order Allow,Deny
    Deny from all
</FilesMatch>

# Konfigurationsdateien schützen
<Files "config.php">
    Order Allow,Deny
    Deny from all
    # Nur für lokale Entwicklung erlauben
    Allow from 127.0.0.1
    Allow from ::1
</Files>

# Setup-Datei nach Installation schützen
<Files "setup.php">
    Order Allow,Deny
    Deny from all
    # Nur für lokale Entwicklung erlauben
    Allow from 127.0.0.1
    Allow from ::1
</Files>

# ====================================
# Performance-Optimierung
# ====================================

# GZIP-Kompression aktivieren
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/json
</IfModule>

# Browser-Caching für statische Dateien
<IfModule mod_expires.c>
    ExpiresActive On
    
    # Bilder
    ExpiresByType image/jpg "access plus 1 month"
    ExpiresByType image/jpeg "access plus 1 month"
    ExpiresByType image/gif "access plus 1 month"
    ExpiresByType image/png "access plus 1 month"
    ExpiresByType image/webp "access plus 1 month"
    ExpiresByType image/svg+xml "access plus 1 month"
    
    # CSS und JavaScript
    ExpiresByType text/css "access plus 1 week"
    ExpiresByType application/javascript "access plus 1 week"
    ExpiresByType application/x-javascript "access plus 1 week"
    
    # Fonts
    ExpiresByType font/woff "access plus 1 month"
    ExpiresByType font/woff2 "access plus 1 month"
    ExpiresByType application/font-woff "access plus 1 month"
    ExpiresByType application/font-woff2 "access plus 1 month"
    
    # HTML und JSON (kurzes Caching)
    ExpiresByType text/html "access plus 1 hour"
    ExpiresByType application/json "access plus 1 hour"
</IfModule>

# ETag-Header für besseres Caching
<IfModule mod_headers.c>
    Header unset ETag
    FileETag None
</IfModule>

# ====================================
# Fehlerbehandlung
# ====================================

# Custom Error Pages (optional)
# ErrorDocument 404 /error/404.html
# ErrorDocument 500 /error/500.html

# PHP-Fehler in Produktion ausblenden
<IfModule mod_php.c>
    php_flag display_errors Off
    php_flag log_errors On
    php_value error_log backend/logs/php_errors.log
</IfModule>

# ====================================
# Rate Limiting (optional)
# ====================================

# Einfaches Rate Limiting mit mod_rewrite
<IfModule mod_rewrite.c>
    # Zu viele API-Requests von einer IP blockieren
    RewriteMap rateLimiter prg:backend/utils/rate_limiter.sh
    
    # Blockiere bei zu vielen Requests
    RewriteCond ${rateLimiter:%{REMOTE_ADDR}} ^block$
    RewriteRule ^api/ - [F,L]
</IfModule>

# ====================================
# Upload-Limits
# ====================================

<IfModule mod_php.c>
    # Maximale Upload-Größe: 10MB
    php_value upload_max_filesize 10M
    php_value post_max_size 10M
    php_value max_execution_time 300
    php_value max_input_time 300
</IfModule>

# ====================================
# Wartungsmodus (aktivieren bei Bedarf)
# ====================================

# Wartungsmodus aktivieren (auskommentieren zum Aktivieren)
# RewriteCond %{REQUEST_URI} !/maintenance.html$
# RewriteCond %{REMOTE_ADDR} !^127\.0\.0\.1$
# RewriteRule ^(.*)$ /maintenance.html [R=503,L]

# ====================================
# HTTPS-Weiterleitung (Produktion)
# ====================================

# HTTPS erzwingen (in Produktion aktivieren)
# <IfModule mod_rewrite.c>
#     RewriteCond %{HTTPS} off
#     RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
# </IfModule>

# ====================================
# Zusätzliche Sicherheitsmaßnahmen
# ====================================

# Directory Listing deaktivieren
Options -Indexes

# Server-Signatur ausblenden
ServerTokens Prod

# PHP-Version in Headers ausblenden
<IfModule mod_php.c>
    php_flag expose_php Off
</IfModule>

# Gefährliche HTTP-Methoden blockieren
<LimitExcept GET POST PUT DELETE OPTIONS>
    Order Allow,Deny
    Deny from all
</LimitExcept>

# ====================================
# Mobile-spezifische Optimierungen
# ====================================

# Viewport-Meta für mobile Geräte setzen
<IfModule mod_headers.c>
    <FilesMatch "\.(html|htm)$">
        Header always set X-UA-Compatible "IE=edge"
    </FilesMatch>
</IfModule>

# ====================================
# Logging (optional)
# ====================================

# Custom Log-Format für API-Requests
# LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\" %D" combined_with_time
# CustomLog backend/logs/api_access.log combined_with_time env=api_request

# ====================================
# Development-Modus (nur lokal)
# ====================================

<IfModule mod_rewrite.c>
    # Entwicklungsumgebung erkennen
    RewriteCond %{HTTP_HOST} ^localhost$ [OR]
    RewriteCond %{HTTP_HOST} ^127\.0\.0\.1$
    RewriteRule ^(.*)$ - [E=DEV_MODE:1]
</IfModule>

# In Development PHP-Fehler anzeigen
<IfModule mod_php.c>
    SetEnvIf HTTP_HOST "localhost|127.0.0.1" DEV_MODE
    php_flag display_errors On env=DEV_MODE
    php_value error_reporting "E_ALL" env=DEV_MODE
</IfModule>